/*
 * Knowledge Gateway Service
 * This API allows merchants using Microsoft Dynamics 365 Fraud Protection to send events for risk evaluation. These events are used to build up information about the purchases the customers are making and provide merchants with a recommendation to approve or reject transactions due to Fraud. For integration and testing, please use the https://api.dfp.microsoft-int.com/ endpoint. For Production, please use https://api.dfp.microsoft.com/.
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.griddynamics.msd365fp.manualreview.queues.model.testing;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import lombok.Builder;

import java.time.OffsetDateTime;
import java.util.Objects;

/**
 * N/A
 */
@Schema(description = "N/A")
@Builder
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-14T20:07:05.300728+04:00[Europe/Saratov]")
public class MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser {
  @JsonProperty("userId")
  private String userId;

  @JsonProperty("creationDate")
  private OffsetDateTime creationDate;

  @JsonProperty("updateDate")
  private OffsetDateTime updateDate;

  @JsonProperty("firstName")
  private String firstName;

  @JsonProperty("lastName")
  private String lastName;

  @JsonProperty("country")
  private String country;

  @JsonProperty("zipCode")
  private String zipCode;

  @JsonProperty("timeZone")
  private String timeZone;

  @JsonProperty("language")
  private String language;

  @JsonProperty("phoneNumber")
  private String phoneNumber;

  @JsonProperty("email")
  private String email;

  @JsonProperty("membershipId")
  private String membershipId;

  @JsonProperty("profileType")
  private String profileType;

  @JsonProperty("profileName")
  private String profileName;

  @JsonProperty("authenticationProvider")
  private String authenticationProvider;

  @JsonProperty("displayName")
  private String displayName;

  @JsonProperty("isEmailValidated")
  private Boolean isEmailValidated;

  @JsonProperty("emailValidatedDate")
  private OffsetDateTime emailValidatedDate;

  @JsonProperty("isPhoneNumberValidated")
  private Boolean isPhoneNumberValidated;

  @JsonProperty("phoneNumberValidatedDate")
  private OffsetDateTime phoneNumberValidatedDate;

  public  MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * The user identifier. This information is provided by the merchant.
   * @return userId
  **/
  @Schema(required = true, description = "The user identifier. This information is provided by the merchant.")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }

  public MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * The creation date of the user account. The format is ISO 8601.
   * @return creationDate
  **/
  @Schema(description = "The creation date of the user account. The format is ISO 8601.")
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }

  public  MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser updateDate(OffsetDateTime updateDate) {
    this.updateDate = updateDate;
    return this;
  }

   /**
   * The date when user data was last changed. The format is ISO 8601.
   * @return updateDate
  **/
  @Schema(description = "The date when user data was last changed. The format is ISO 8601.")
  public OffsetDateTime getUpdateDate() {
    return updateDate;
  }

  public void setUpdateDate(OffsetDateTime updateDate) {
    this.updateDate = updateDate;
  }

  public  MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * The user-provided first name on the account.
   * @return firstName
  **/
  @Schema(description = "The user-provided first name on the account.")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public  MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * The user-provided last name on the account.
   * @return lastName
  **/
  @Schema(description = "The user-provided last name on the account.")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public  MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser country(String country) {
    this.country = country;
    return this;
  }

   /**
   * The user&#x27;s country or region. The value should be a two-letter ISO country/region code (for example, US).
   * @return country
  **/
  @Schema(description = "The user's country or region. The value should be a two-letter ISO country/region code (for example, US).")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  public  MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser zipCode(String zipCode) {
    this.zipCode = zipCode;
    return this;
  }

   /**
   * The user&#x27;s postal code.
   * @return zipCode
  **/
  @Schema(description = "The user's postal code.")
  public String getZipCode() {
    return zipCode;
  }

  public void setZipCode(String zipCode) {
    this.zipCode = zipCode;
  }

  public  MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser timeZone(String timeZone) {
    this.timeZone = timeZone;
    return this;
  }

   /**
   * The user&#x27;s time zone.
   * @return timeZone
  **/
  @Schema(description = "The user's time zone.")
  public String getTimeZone() {
    return timeZone;
  }

  public void setTimeZone(String timeZone) {
    this.timeZone = timeZone;
  }

  public  MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser language(String language) {
    this.language = language;
    return this;
  }

   /**
   * The user&#x27;s language and territory (for example, EN-US).
   * @return language
  **/
  @Schema(description = "The user's language and territory (for example, EN-US).")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public  MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * The user&#x27;s phone number. The format should be the country/region code followed by a hyphen (-) and then the phone number (for example, for the US, +1-1234567890).
   * @return phoneNumber
  **/
  @Schema(description = "The user's phone number. The format should be the country/region code followed by a hyphen (-) and then the phone number (for example, for the US, +1-1234567890).")
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public  MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser email(String email) {
    this.email = email;
    return this;
  }

   /**
   * The user&#x27;s email address. This value is case-insensitive.
   * @return email
  **/
  @Schema(description = "The user's email address. This value is case-insensitive.")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public  MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser membershipId(String membershipId) {
    this.membershipId = membershipId;
    return this;
  }

   /**
   * The membership ID, if the user already has an existing membership with the merchant.
   * @return membershipId
  **/
  @Schema(description = "The membership ID, if the user already has an existing membership with the merchant.")
  public String getMembershipId() {
    return membershipId;
  }

  public void setMembershipId(String membershipId) {
    this.membershipId = membershipId;
  }

  public  MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser profileType(String profileType) {
    this.profileType = profileType;
    return this;
  }

   /**
   * The user&#x27;s profile type. Possible values &#x27;Consumer&#x27; | &#x27;Seller&#x27; | &#x27;Publisher&#x27; | &#x27;Tenant&#x27; | &#x27;Developer&#x27;
   * @return profileType
  **/
  @Schema(description = "The user's profile type. Possible values 'Consumer' | 'Seller' | 'Publisher' | 'Tenant' | 'Developer'")
  public String getProfileType() {
    return profileType;
  }

  public void setProfileType(String profileType) {
    this.profileType = profileType;
  }

  public  MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser profileName(String profileName) {
    this.profileName = profileName;
    return this;
  }

   /**
   * The profile name, depending on profileType.
   * @return profileName
  **/
  @Schema(description = "The profile name, depending on profileType.")
  public String getProfileName() {
    return profileName;
  }

  public void setProfileName(String profileName) {
    this.profileName = profileName;
  }

  public  MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser authenticationProvider(String authenticationProvider) {
    this.authenticationProvider = authenticationProvider;
    return this;
  }

   /**
   * The user&#x27;s authentication provider, if different from the merchant&#x27;s. Possible valuse &#x27;MSA&#x27; | &#x27;Facebook&#x27; | &#x27;PSN&#x27; | &#x27;MerchantAuth&#x27; | &#x27;Google&#x27;
   * @return authenticationProvider
  **/
  @Schema(description = "The user's authentication provider, if different from the merchant's. Possible valuse 'MSA' | 'Facebook' | 'PSN' | 'MerchantAuth' | 'Google'")
  public String getAuthenticationProvider() {
    return authenticationProvider;
  }

  public void setAuthenticationProvider(String authenticationProvider) {
    this.authenticationProvider = authenticationProvider;
  }

  public  MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * The user&#x27;s display name. Example: Xbox gamertag value
   * @return displayName
  **/
  @Schema(description = "The user's display name. Example: Xbox gamertag value")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public  MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser isEmailValidated(Boolean isEmailValidated) {
    this.isEmailValidated = isEmailValidated;
    return this;
  }

   /**
   * A True/False value that indicates whether the user-provided email address has been verified as owned by the user.
   * @return isEmailValidated
  **/
  @Schema(description = "A True/False value that indicates whether the user-provided email address has been verified as owned by the user.")
  public Boolean isIsEmailValidated() {
    return isEmailValidated;
  }

  public void setIsEmailValidated(Boolean isEmailValidated) {
    this.isEmailValidated = isEmailValidated;
  }

  public  MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser emailValidatedDate(OffsetDateTime emailValidatedDate) {
    this.emailValidatedDate = emailValidatedDate;
    return this;
  }

   /**
   * The validation date of the user email. The format is ISO 8601.
   * @return emailValidatedDate
  **/
  @Schema(description = "The validation date of the user email. The format is ISO 8601.")
  public OffsetDateTime getEmailValidatedDate() {
    return emailValidatedDate;
  }

  public void setEmailValidatedDate(OffsetDateTime emailValidatedDate) {
    this.emailValidatedDate = emailValidatedDate;
  }

  public  MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser isPhoneNumberValidated(Boolean isPhoneNumberValidated) {
    this.isPhoneNumberValidated = isPhoneNumberValidated;
    return this;
  }

   /**
   * A True/False value that indicates whether the user-provided phone number has been verified as owned by the user.
   * @return isPhoneNumberValidated
  **/
  @Schema(description = "A True/False value that indicates whether the user-provided phone number has been verified as owned by the user.")
  public Boolean isIsPhoneNumberValidated() {
    return isPhoneNumberValidated;
  }

  public void setIsPhoneNumberValidated(Boolean isPhoneNumberValidated) {
    this.isPhoneNumberValidated = isPhoneNumberValidated;
  }

  public  MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser phoneNumberValidatedDate(OffsetDateTime phoneNumberValidatedDate) {
    this.phoneNumberValidatedDate = phoneNumberValidatedDate;
    return this;
  }

   /**
   * The validation date of the user phone number. The format is ISO 8601.
   * @return phoneNumberValidatedDate
  **/
  @Schema(description = "The validation date of the user phone number. The format is ISO 8601.")
  public OffsetDateTime getPhoneNumberValidatedDate() {
    return phoneNumberValidatedDate;
  }

  public void setPhoneNumberValidatedDate(OffsetDateTime phoneNumberValidatedDate) {
    this.phoneNumberValidatedDate = phoneNumberValidatedDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
     MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser = ( MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser) o;
    return Objects.equals(this.userId, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser.userId) &&
        Objects.equals(this.creationDate, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser.creationDate) &&
        Objects.equals(this.updateDate, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser.updateDate) &&
        Objects.equals(this.firstName, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser.firstName) &&
        Objects.equals(this.lastName, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser.lastName) &&
        Objects.equals(this.country, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser.country) &&
        Objects.equals(this.zipCode, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser.zipCode) &&
        Objects.equals(this.timeZone, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser.timeZone) &&
        Objects.equals(this.language, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser.language) &&
        Objects.equals(this.phoneNumber, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser.phoneNumber) &&
        Objects.equals(this.email, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser.email) &&
        Objects.equals(this.membershipId, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser.membershipId) &&
        Objects.equals(this.profileType, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser.profileType) &&
        Objects.equals(this.profileName, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser.profileName) &&
        Objects.equals(this.authenticationProvider, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser.authenticationProvider) &&
        Objects.equals(this.displayName, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser.displayName) &&
        Objects.equals(this.isEmailValidated, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser.isEmailValidated) &&
        Objects.equals(this.emailValidatedDate, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser.emailValidatedDate) &&
        Objects.equals(this.isPhoneNumberValidated, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser.isPhoneNumberValidated) &&
        Objects.equals(this.phoneNumberValidatedDate, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser.phoneNumberValidatedDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, creationDate, updateDate, firstName, lastName, country, zipCode, timeZone, language, phoneNumber, email, membershipId, profileType, profileName, authenticationProvider, displayName, isEmailValidated, emailValidatedDate, isPhoneNumberValidated, phoneNumberValidatedDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser {\n");
    
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    zipCode: ").append(toIndentedString(zipCode)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    membershipId: ").append(toIndentedString(membershipId)).append("\n");
    sb.append("    profileType: ").append(toIndentedString(profileType)).append("\n");
    sb.append("    profileName: ").append(toIndentedString(profileName)).append("\n");
    sb.append("    authenticationProvider: ").append(toIndentedString(authenticationProvider)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    isEmailValidated: ").append(toIndentedString(isEmailValidated)).append("\n");
    sb.append("    emailValidatedDate: ").append(toIndentedString(emailValidatedDate)).append("\n");
    sb.append("    isPhoneNumberValidated: ").append(toIndentedString(isPhoneNumberValidated)).append("\n");
    sb.append("    phoneNumberValidatedDate: ").append(toIndentedString(phoneNumberValidatedDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
