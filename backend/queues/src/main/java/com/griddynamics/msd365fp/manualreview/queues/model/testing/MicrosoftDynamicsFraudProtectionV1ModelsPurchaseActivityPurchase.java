/*
 * Knowledge Gateway Service
 * This API allows merchants using Microsoft Dynamics 365 Fraud Protection to send events for risk evaluation. These events are used to build up information about the purchases the customers are making and provide merchants with a recommendation to approve or reject transactions due to Fraud. For integration and testing, please use the https://api.dfp.microsoft-int.com/ endpoint. For Production, please use https://api.dfp.microsoft.com/.
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.griddynamics.msd365fp.manualreview.queues.model.testing;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import lombok.Builder;

import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Objects;

/**
 * Purchase Contract payload
 */
@Schema(description = "Purchase Contract payload")
@Builder
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-14T20:07:05.300728+04:00[Europe/Saratov]")
public class MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase {
  @JsonProperty("purchaseId")
  private String purchaseId;

  @JsonProperty("assessmentType")
  private String assessmentType;

  @JsonProperty("originalOrderId")
  private String originalOrderId;

  @JsonProperty("customerLocalDate")
  private OffsetDateTime customerLocalDate;

  @JsonProperty("merchantLocalDate")
  private OffsetDateTime merchantLocalDate;

  @JsonProperty("totalAmount")
  private java.math.BigDecimal totalAmount;

  @JsonProperty("salesTax")
  private java.math.BigDecimal salesTax;

  @JsonProperty("currency")
  private String currency;

  @JsonProperty("shippingMethod")
  private String shippingMethod;

  @JsonProperty("user")
  private MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser user;

  @JsonProperty("deviceContext")
  private MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseDeviceContext deviceContext;

  @JsonProperty("paymentInstrumentList")
  private List<MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchasePaymentInstrument> paymentInstrumentList;

  @JsonProperty("productList")
  private List<MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseProduct> productList;

  @JsonProperty("shippingAddress")
  private MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseAddress shippingAddress;

  @JsonProperty("_metadata")
  private MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityMetadata _metadata;

  @JsonProperty("customData")
  private Map<String,String> customData;


  public MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase purchaseId(String purchaseId) {
    this.purchaseId = purchaseId;
    return this;
  }

   /**
   * Transaction (or purchase/order) identifier in merchant system.
   * @return purchaseId
  **/
  @Schema(required = true, description = "Transaction (or purchase/order) identifier in merchant system.")
  public String getPurchaseId() {
    return purchaseId;
  }

  public void setPurchaseId(String purchaseId) {
    this.purchaseId = purchaseId;
  }

  public MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase assessmentType(String assessmentType) {
    this.assessmentType = assessmentType;
    return this;
  }

   /**
   * Indicates the assessment type for the event. Possible values are &#x27;Evaluate&#x27; or &#x27;Protect&#x27;. If not specified, default is &#x27;Protect&#x27;
   * @return assessmentType
  **/
  @Schema(description = "Indicates the assessment type for the event. Possible values are 'Evaluate' or 'Protect'. If not specified, default is 'Protect'")
  public String getAssessmentType() {
    return assessmentType;
  }

  public void setAssessmentType(String assessmentType) {
    this.assessmentType = assessmentType;
  }

  public MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase originalOrderId(String originalOrderId) {
    this.originalOrderId = originalOrderId;
    return this;
  }

   /**
   * Original Order identifier in merchant system for payments for recurring billing like subscription monthly billing.
   * @return originalOrderId
  **/
  @Schema(description = "Original Order identifier in merchant system for payments for recurring billing like subscription monthly billing.")
  public String getOriginalOrderId() {
    return originalOrderId;
  }

  public void setOriginalOrderId(String originalOrderId) {
    this.originalOrderId = originalOrderId;
  }

  public MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase customerLocalDate(OffsetDateTime customerLocalDate) {
    this.customerLocalDate = customerLocalDate;
    return this;
  }

   /**
   * Purchase creation date as per Customer local time-zone. Format is ISO8601
   * @return customerLocalDate
  **/
  @Schema(description = "Purchase creation date as per Customer local time-zone. Format is ISO8601")
  public OffsetDateTime getCustomerLocalDate() {
    return customerLocalDate;
  }

  public void setCustomerLocalDate(OffsetDateTime customerLocalDate) {
    this.customerLocalDate = customerLocalDate;
  }

  public MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase merchantLocalDate(OffsetDateTime merchantLocalDate) {
    this.merchantLocalDate = merchantLocalDate;
    return this;
  }

   /**
   * Purchase ingestion date in Merchant per Merchant time-zone. Format is ISO8601
   * @return merchantLocalDate
  **/
  @Schema(required = true, description = "Purchase ingestion date in Merchant per Merchant time-zone. Format is ISO8601")
  public OffsetDateTime getMerchantLocalDate() {
    return merchantLocalDate;
  }

  public void setMerchantLocalDate(OffsetDateTime merchantLocalDate) {
    this.merchantLocalDate = merchantLocalDate;
  }

  public MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase totalAmount(java.math.BigDecimal totalAmount) {
    this.totalAmount = totalAmount;
    return this;
  }

   /**
   * Total amount charged to the customer; tax included. Provided by the Merchant.
   * @return totalAmount
  **/
  @Schema(description = "Total amount charged to the customer; tax included. Provided by the Merchant.")
  public java.math.BigDecimal getTotalAmount() {
    return totalAmount;
  }

  public void setTotalAmount(java.math.BigDecimal totalAmount) {
    this.totalAmount = totalAmount;
  }

  public MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase salesTax(java.math.BigDecimal salesTax) {
    this.salesTax = salesTax;
    return this;
  }

   /**
   * Sales tax charged for the transaction. Provided by the Merchant.
   * @return salesTax
  **/
  @Schema(description = "Sales tax charged for the transaction. Provided by the Merchant.")
  public java.math.BigDecimal getSalesTax() {
    return salesTax;
  }

  public void setSalesTax(java.math.BigDecimal salesTax) {
    this.salesTax = salesTax;
  }

  public MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Currency of the original purchase. Provided by the Merchant.
   * @return currency
  **/
  @Schema(description = "Currency of the original purchase. Provided by the Merchant.")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase shippingMethod(String shippingMethod) {
    this.shippingMethod = shippingMethod;
    return this;
  }

   /**
   * Indicates the method used to ship the purchase. Possible values &#x27;InStorePickup&#x27; | &#x27;Standard&#x27; | &#x27;Express&#x27; | &#x27;DirectEntitlement&#x27; | &#x27;DigitalToken&#x27;
   * @return shippingMethod
  **/
  @Schema(description = "Indicates the method used to ship the purchase. Possible values 'InStorePickup' | 'Standard' | 'Express' | 'DirectEntitlement' | 'DigitalToken'")
  public String getShippingMethod() {
    return shippingMethod;
  }

  public void setShippingMethod(String shippingMethod) {
    this.shippingMethod = shippingMethod;
  }

  public MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase user(MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @Schema(description = "")
  public MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser getUser() {
    return user;
  }

  public void setUser(MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseUser user) {
    this.user = user;
  }

  public MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase deviceContext(MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseDeviceContext deviceContext) {
    this.deviceContext = deviceContext;
    return this;
  }

   /**
   * Get deviceContext
   * @return deviceContext
  **/
  @Schema(description = "")
  public MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseDeviceContext getDeviceContext() {
    return deviceContext;
  }

  public void setDeviceContext(MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseDeviceContext deviceContext) {
    this.deviceContext = deviceContext;
  }

  public MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase paymentInstrumentList(List<MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchasePaymentInstrument> paymentInstrumentList) {
    this.paymentInstrumentList = paymentInstrumentList;
    return this;
  }

  public MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase addPaymentInstrumentListItem(MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchasePaymentInstrument paymentInstrumentListItem) {
    if (this.paymentInstrumentList == null) {
      this.paymentInstrumentList = new ArrayList<>();
    }
    this.paymentInstrumentList.add(paymentInstrumentListItem);
    return this;
  }

   /**
   * List of items of type PaymentInstrument
   * @return paymentInstrumentList
  **/
  @Schema(description = "List of items of type PaymentInstrument")
  public List<MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchasePaymentInstrument> getPaymentInstrumentList() {
    return paymentInstrumentList;
  }

  public void setPaymentInstrumentList(List<MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchasePaymentInstrument> paymentInstrumentList) {
    this.paymentInstrumentList = paymentInstrumentList;
  }

  public MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase productList(List<MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseProduct> productList) {
    this.productList = productList;
    return this;
  }

  public MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase addProductListItem(MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseProduct productListItem) {
    if (this.productList == null) {
      this.productList = new ArrayList<>();
    }
    this.productList.add(productListItem);
    return this;
  }

   /**
   * List of items of type Product
   * @return productList
  **/
  @Schema(description = "List of items of type Product")
  public List<MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseProduct> getProductList() {
    return productList;
  }

  public void setProductList(List<MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseProduct> productList) {
    this.productList = productList;
  }

  public MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase shippingAddress(MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseAddress shippingAddress) {
    this.shippingAddress = shippingAddress;
    return this;
  }

   /**
   * Get shippingAddress
   * @return shippingAddress
  **/
  @Schema(description = "")
  public MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseAddress getShippingAddress() {
    return shippingAddress;
  }

  public void setShippingAddress(MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchaseAddress shippingAddress) {
    this.shippingAddress = shippingAddress;
  }

  public MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase _metadata(MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityMetadata _metadata) {
    this._metadata = _metadata;
    return this;
  }

   /**
   * Get _metadata
   * @return _metadata
  **/
  @Schema(required = true, description = "")
  public MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityMetadata get_metadata() {
    return _metadata;
  }

  public void setMetadata(MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityMetadata _metadata) {
    this._metadata = _metadata;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase = (MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase) o;
    return Objects.equals(this.purchaseId, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase.purchaseId) &&
        Objects.equals(this.assessmentType, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase.assessmentType) &&
        Objects.equals(this.originalOrderId, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase.originalOrderId) &&
        Objects.equals(this.customerLocalDate, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase.customerLocalDate) &&
        Objects.equals(this.merchantLocalDate, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase.merchantLocalDate) &&
        Objects.equals(this.totalAmount, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase.totalAmount) &&
        Objects.equals(this.salesTax, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase.salesTax) &&
        Objects.equals(this.currency, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase.currency) &&
        Objects.equals(this.shippingMethod, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase.shippingMethod) &&
        Objects.equals(this.user, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase.user) &&
        Objects.equals(this.deviceContext, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase.deviceContext) &&
        Objects.equals(this.paymentInstrumentList, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase.paymentInstrumentList) &&
        Objects.equals(this.productList, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase.productList) &&
        Objects.equals(this.shippingAddress, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase.shippingAddress) &&
        Objects.equals(this._metadata, microsoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase._metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(purchaseId, assessmentType, originalOrderId, customerLocalDate, merchantLocalDate, totalAmount, salesTax, currency, shippingMethod, user, deviceContext, paymentInstrumentList, productList, shippingAddress, _metadata);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MicrosoftDynamicsFraudProtectionV1ModelsPurchaseActivityPurchase {\n");
    
    sb.append("    purchaseId: ").append(toIndentedString(purchaseId)).append("\n");
    sb.append("    assessmentType: ").append(toIndentedString(assessmentType)).append("\n");
    sb.append("    originalOrderId: ").append(toIndentedString(originalOrderId)).append("\n");
    sb.append("    customerLocalDate: ").append(toIndentedString(customerLocalDate)).append("\n");
    sb.append("    merchantLocalDate: ").append(toIndentedString(merchantLocalDate)).append("\n");
    sb.append("    totalAmount: ").append(toIndentedString(totalAmount)).append("\n");
    sb.append("    salesTax: ").append(toIndentedString(salesTax)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    shippingMethod: ").append(toIndentedString(shippingMethod)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    deviceContext: ").append(toIndentedString(deviceContext)).append("\n");
    sb.append("    paymentInstrumentList: ").append(toIndentedString(paymentInstrumentList)).append("\n");
    sb.append("    productList: ").append(toIndentedString(productList)).append("\n");
    sb.append("    shippingAddress: ").append(toIndentedString(shippingAddress)).append("\n");
    sb.append("    _metadata: ").append(toIndentedString(_metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
