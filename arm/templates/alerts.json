{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "prefix": {
            "type": "string"
        },
        "actionGroupName": {
            "type": "string"
        },
        "alertReceivers": {
            "type": "array"
        },
        "appInsightName": {
            "type": "string"
        },
        "appInsightSecondaryName": {
            "type": "string"
        },
        "fdName": {
            "type": "string"
        },
        "primaryRegion": {
            "type": "string"
        },
        "secondaryRegion": {
            "type": "string"
        },
        "appAnalyticsAddress": {
            "type": "array"
        },
        "appQueuesAddress": {
            "type": "array"
        },
        "cdnAddress": {
            "type": "string"
        },
        "failedLocationCountAlert": {
            "type": "int",
            "defaultValue": 1
        },
        "exceptionsThresholdAlert": {
            "type": "int",
            "defaultValue": 1
        },
        "exceptionsEvaluationFrequency": {
            "type": "string",
            "defaultValue": "PT1M",
            "allowedValues": [
                "PT1M",
                "PT5M",
                "PT15M",
                "PT30M",
                "PT1H"
            ]
        },
        "exceptionsWindowSize": {
            "type": "string",
            "defaultValue": "PT5M",
            "allowedValues": [
                "PT1M",
                "PT5M",
                "PT15M",
                "PT30M",
                "PT1H",
                "PT6H",
                "PT12H",
                "P1D"
            ]
        },
        "backendAppList": {
            "type": "array"
        },
        "backendAppSecondaryList": {
            "type": "array"
        },
        "ehubName": {
          "type": "String"
        },
        "ehubSecondaryName": {
          "type": "String"
        },
        "NoIncomingEventsDfphubEvaluationFrequency": {
            "type": "string",
            "defaultValue": "PT1H",
            "allowedValues": [
            "PT1M",
            "PT5M",
            "PT15M",
            "PT30M",
            "PT1H"
            ]
        },
        "NoIncomingEventsDfphubWindowSize": {
            "type": "string",
            "defaultValue": "P1D",
            "allowedValues": [
            "PT1M",
            "PT5M",
            "PT15M",
            "PT30M",
            "PT1H",
            "PT6H",
            "PT12H",
            "P1D"
            ]
        },
        "NoIncomingEventsDfphubThreshold": {
            "type": "int",
            "defaultValue": 0
        },
        "metricalertTraceWarnSeverityEvaluationFrequency": {
            "type": "string",
            "defaultValue": "PT1M",
            "allowedValues": [
            "PT1M",
            "PT5M",
            "PT15M",
            "PT30M",
            "PT1H"
            ]
        },
        "metricalertTraceWarnSeverityWindowSize": {
            "type": "string",
            "defaultValue": "PT5M",
            "allowedValues": [
            "PT1M",
            "PT5M",
            "PT15M",
            "PT30M",
            "PT1H",
            "PT6H",
            "PT12H",
            "P1D"
            ]
        },
        "metricalertTraceWarnSeverityThreshold": {
            "type": "int",
            "defaultValue": 1
        },
        "metricalertTraceErrorSeverityEvaluationFrequency": {
            "type": "string",
            "defaultValue": "PT1M",
            "allowedValues": [
            "PT1M",
            "PT5M",
            "PT15M",
            "PT30M",
            "PT1H"
            ]
        },
        "metricalertTraceErrorSeverityWindowSize": {
            "type": "string",
            "defaultValue": "PT5M",
            "allowedValues": [
            "PT1M",
            "PT5M",
            "PT15M",
            "PT30M",
            "PT1H",
            "PT6H",
            "PT12H",
            "P1D"
            ]
        },
        "metricalertTraceErrorSeverityThreshold": {
            "type": "int",
            "defaultValue": 1
        }
    },
    "variables": {
        "actionGroupShortName": "email-alert",
        "frontdoorsEntrypointWebtestShortName": "[concat(parameters('prefix'),'-entrypoint-test')]",
        "frontdoorsEntrypointWebtestName": "[concat(variables('frontdoorsEntrypointWebtestShortName'),'-',parameters('appInsightName'))]",
        "frontdoorsEntrypointWebtestSecondaryName": "[concat(variables('frontdoorsEntrypointWebtestShortName'),'-',parameters('appInsightSecondaryName'))]",
        "frontdoorsEntrypointWebtestCheckLocations": [
            {
                "Id": "us-ca-sjc-azr"
            },
            {
                "Id": "us-tx-sn1-azr"
            },
            {
                "Id": "us-il-ch1-azr"
            },
            {
                "Id": "us-va-ash-azr"
            },
            {
                "Id": "us-fl-mia-edge"
            }
        ],
        "frontdoorsEntrypointWebTestUrl": "[concat('https://',parameters('fdName'),'.azurefd.net')]",
        "frontdoorsEntrypointWebTestConfig": "[concat('<WebTest Name=\"',variables('frontdoorsEntrypointWebtestShortName'),'\" Id=\"',guid(variables('frontdoorsEntrypointWebtestName')),'\" Enabled=\"True\" CssProjectStructure=\"\" CssIteration=\"\" Timeout=\"120\" WorkItemIds=\"\" xmlns=\"http://microsoft.com/schemas/VisualStudio/TeamTest/2010\" Description=\"\" CredentialUserName=\"\" CredentialPassword=\"\" PreAuthenticate=\"True\" Proxy=\"default\" StopOnError=\"False\" RecordedResultFile=\"\" ResultsLocale=\"\">  <Items> <Request Method=\"GET\" Guid=\"a3bcafbc-adea-4f0e-a883-699d21d615a2\" Version=\"1.1\" Url=\"',variables('frontdoorsEntrypointWebTestUrl'),'/index.html','\" ThinkTime=\"0\"         Timeout=\"120\"         ParseDependentRequests=\"False\"         FollowRedirects=\"True\"         RecordResult=\"True\"         Cache=\"False\"         ResponseTimeGoal=\"0\"         Encoding=\"utf-8\"         ExpectedHttpStatusCode=\"200\"         ExpectedResponseUrl=\"\"         ReportingName=\"\"         IgnoreHttpStatusCode=\"False\" />        </Items>        </WebTest>')]",
        "fdBackendAlertName": "[concat(parameters('fdName'),'-backend-state-alert')]",
        "fdBackendsList": [
            "[concat(parameters('appAnalyticsAddress')[0],':443')]",
            "[concat(parameters('appAnalyticsAddress')[1],':443')]",
            "[concat(parameters('appQueuesAddress')[0],':443')]",
            "[concat(parameters('appQueuesAddress')[1],':443')]",
            "[concat(parameters('cdnAddress'),':443')]"
        ],
        "metricalertExceptionsName": "[concat(parameters('prefix'),'-server-exceptions-alert')]",
        "metricalertExceptionsSecondaryName": "[concat(parameters('prefix'),'-secondary-server-exceptions-alert')]",
        "scheduledqueryrulesTaskIdleTooLongName": "[concat(parameters('prefix'),'-background-task-alert')]",
        "scheduledqueryrulesTaskIdleTooLongSecondaryName": "[concat(parameters('prefix'),'-secondary-background-task-alert')]",
        "metricalertNoIncomingEventsDfphubName": "[concat(parameters('prefix'),'-no-incomeing-events-dfp-hub-alert')]",
        "metricalertNoIncomingEventsDfphubSecondaryName": "[concat(parameters('prefix'),'-secondary-no-incomeing-events-dfp-hub-alert')]",
        "metricalertTraceWarnSeverityName": "[concat(parameters('prefix'),'-trace-severity-warn-alert')]",
        "metricalertTraceWarnSeveritySecondaryName": "[concat(parameters('prefix'),'-secondary-trace-severity-warn-alert')]",
        "metricalertTraceErrorSeverityName": "[concat(parameters('prefix'),'-trace-severity-error-alert')]",
        "metricalertTraceErrorSeveritySecondaryName": "[concat(parameters('prefix'),'-secondary-trace-severity-error-alert')]",
        "scheduledqueryrulesFatalErrorName": "[concat(parameters('prefix'),'-fatal-error-alert')]",
        "scheduledqueryrulesFatalErrorSecondaryName": "[concat(parameters('prefix'),'-secondary-fatal-error-alert')]"

    },
    "resources": [
        {                                                // Create Action Group
            "type": "microsoft.insights/actionGroups",
            "apiVersion": "2019-03-01",
            "name": "[parameters('actionGroupName')]",
            "location": "Global",
            "properties": {
                "groupShortName": "[variables('actionGroupShortName')]",
                "enabled": true,
                "copy": [
                    {
                        "name": "emailReceivers",
                        "count": "[length(parameters('alertReceivers'))]",
                        "input": {
                            "name": "[concat(parameters('prefix'),'-alert-email-',copyIndex('emailReceivers'))]",
                            "emailAddress": "[parameters('alertReceivers')[copyIndex('emailReceivers')]]",
                            "useCommonAlertSchema": false
                        }
                    }
                ]
            }
        },
        {                                                // Create web test entrypoint
            "type": "microsoft.insights/webtests",
            "apiVersion": "2015-05-01",
            "name": "[variables('frontdoorsEntrypointWebtestName')]",
            "location": "[parameters('primaryRegion')]",
            "tags": {
                "[concat('hidden-link:',resourceId('microsoft.insights/components/', parameters('appInsightName')))]": "Resource"
            },
            "properties": {
                "SyntheticMonitorId": "[variables('frontdoorsEntrypointWebtestName')]",
                "Name": "[variables('frontdoorsEntrypointWebtestShortName')]",
                "Enabled": true,
                "Frequency": 300,
                "Timeout": 120,
                "Kind": "ping",
                "RetryEnabled": false,
                "Locations": "[variables('frontdoorsEntrypointWebtestCheckLocations')]",
                "Configuration": {
                    "WebTest": "[variables('frontdoorsEntrypointWebTestConfig')]"
                }
            }
        },
        {                                                // Alert on entrypoint test
            "type": "microsoft.insights/metricalerts",
            "apiVersion": "2018-03-01",
            "name": "[variables('frontdoorsEntrypointWebtestName')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/webtests', variables('frontdoorsEntrypointWebtestName'))]",
                "[resourceId('microsoft.insights/actionGroups',parameters('actionGroupName'))]"
            ],
            "tags": {
                "[concat('hidden-link:',resourceId('microsoft.insights/components/', parameters('appInsightName')))]": "Resource",
                "[concat('hidden-link:',resourceId('microsoft.insights/webtests', variables('frontdoorsEntrypointWebtestName')))]": "Resource"
            },
            "properties": {
                "description": "[concat('Alert rule for availability test \"', variables('frontdoorsEntrypointWebTestUrl'), '\"')]",
                "severity": 1,
                "enabled": true,
                "scopes": [
                    "[resourceId('microsoft.insights/webtests', variables('frontdoorsEntrypointWebtestName'))]",
                    "[resourceId('microsoft.insights/components', parameters('appInsightName'))]"
                ],
                "evaluationFrequency": "PT1M",
                "windowSize": "PT5M",
                "criteria": {
                    "odata.type": "Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria",
                    "webTestId": "[resourceId('Microsoft.Insights/webtests', variables('frontdoorsEntrypointWebtestName'))]",
                    "componentId": "[resourceId('Microsoft.Insights/components', parameters('appInsightName'))]",
                    "failedLocationCount": "[parameters('failedLocationCountAlert')]"
                },
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups',parameters('actionGroupName'))]"
                    }
                ]
            }
        },
                {                                                // Create web test entrypoint SECONDARY REGION
            "type": "microsoft.insights/webtests",
            "apiVersion": "2015-05-01",
            "name": "[variables('frontdoorsEntrypointWebtestSecondaryName')]",
            "location": "[parameters('secondaryRegion')]",
            "tags": {
                "[concat('hidden-link:',resourceId('microsoft.insights/components/', parameters('appInsightSecondaryName')))]": "Resource"
            },
            "properties": {
                "SyntheticMonitorId": "[variables('frontdoorsEntrypointWebtestSecondaryName')]",
                "Name": "[variables('frontdoorsEntrypointWebtestShortName')]",
                "Enabled": true,
                "Frequency": 300,
                "Timeout": 120,
                "Kind": "ping",
                "RetryEnabled": false,
                "Locations": "[variables('frontdoorsEntrypointWebtestCheckLocations')]",
                "Configuration": {
                    "WebTest": "[variables('frontdoorsEntrypointWebTestConfig')]"
                }
            }
        },
        {                                                // Alert on entrypoint test SECONDARY REGION
            "type": "microsoft.insights/metricalerts",
            "apiVersion": "2018-03-01",
            "name": "[variables('frontdoorsEntrypointWebtestSecondaryName')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/webtests', variables('frontdoorsEntrypointWebtestSecondaryName'))]",
                "[resourceId('microsoft.insights/actionGroups',parameters('actionGroupName'))]"
            ],
            "tags": {
                "[concat('hidden-link:',resourceId('microsoft.insights/components/', parameters('appInsightSecondaryName')))]": "Resource",
                "[concat('hidden-link:',resourceId('microsoft.insights/webtests', variables('frontdoorsEntrypointWebtestSecondaryName')))]": "Resource"
            },
            "properties": {
                "description": "[concat('Alert rule for availability test \"', variables('frontdoorsEntrypointWebTestUrl'), '\"')]",
                "severity": 1,
                "enabled": true,
                "scopes": [
                    "[resourceId('microsoft.insights/webtests', variables('frontdoorsEntrypointWebtestSecondaryName'))]",
                    "[resourceId('microsoft.insights/components', parameters('appInsightSecondaryName'))]"
                ],
                "evaluationFrequency": "PT1M",
                "windowSize": "PT5M",
                "criteria": {
                    "odata.type": "Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria",
                    "webTestId": "[resourceId('Microsoft.Insights/webtests', variables('frontdoorsEntrypointWebtestSecondaryName'))]",
                    "componentId": "[resourceId('Microsoft.Insights/components', parameters('appInsightSecondaryName'))]",
                    "failedLocationCount": "[parameters('failedLocationCountAlert')]"
                },
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups',parameters('actionGroupName'))]"
                    }
                ]
            }
        },
        {                                                // Alert on Front Doors backand failure
            "type": "microsoft.insights/metricAlerts",
            "apiVersion": "2018-03-01",
            "name": "[variables('fdBackendAlertName')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups',parameters('actionGroupName'))]"
            ],
            "properties": {
                "description": "Alert rule for Front Doors backends state",
                "severity": 1,
                "enabled": true,
                "scopes": [
                    "[resourceId('Microsoft.Network/frontdoors', parameters('fdName'))]"
                ],
                "evaluationFrequency": "PT1M",
                "windowSize": "PT5M",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": 50,
                            "name": "Metric1",
                            "metricNamespace": "microsoft.network/frontdoors",
                            "metricName": "BackendHealthPercentage",
                            "dimensions": [
                                {
                                    "name": "Backend",
                                    "operator": "Include",
                                    "values": "[variables('fdBackendsList')]"
                                }
                            ],
                            "operator": "LessThan",
                            "timeAggregation": "Average",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.Network/frontdoors",
                "targetResourceRegion": "global",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups',parameters('actionGroupName'))]",
                        "webHookProperties": {}
                    }
                ]
            }
        },
        {                                                // Alert on backend server exceptions
            "type": "microsoft.insights/metricalerts",
            "apiVersion": "2018-03-01",
            "name": "[variables('metricalertExceptionsName')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups',parameters('actionGroupName'))]"
            ],
            "properties": {
                "description": "Alert rule for server exceptions in backend applications",
                "severity": 1,
                "enabled": true,
                "scopes": [
                    "[resourceId('microsoft.insights/components', parameters('appInsightName'))]"
                ],
                "evaluationFrequency": "[parameters('exceptionsEvaluationFrequency')]",
                "windowSize": "[parameters('exceptionsWindowSize')]",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": "[parameters('exceptionsThresholdAlert')]",
                            "name": "Metric1",
                            "metricNamespace": "microsoft.insights/components",
                            "metricName": "exceptions/server",
                            "dimensions": [
                                {
                                    "name": "cloud/roleName",
                                    "operator": "Include",
                                    "values": "[parameters('backendAppList')]"
                                }
                            ],
                            "operator": "GreaterThan",
                            "timeAggregation": "Count",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.Insights/components",
                "targetResourceRegion": "[parameters('primaryRegion')]",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups',parameters('actionGroupName'))]",
                        "webHookProperties": {}
                    }
                ]
            }
        },
        {                                                // Alert on backend server exceptions SECONDARY REGION
            "type": "microsoft.insights/metricalerts",
            "apiVersion": "2018-03-01",
            "name": "[variables('metricalertExceptionsSecondaryName')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups',parameters('actionGroupName'))]"
            ],
            "properties": {
                "description": "Alert rule for server exceptions in backend applications",
                "severity": 1,
                "enabled": true,
                "scopes": [
                    "[resourceId('microsoft.insights/components', parameters('appInsightSecondaryName'))]"
                ],
                "evaluationFrequency": "[parameters('exceptionsEvaluationFrequency')]",
                "windowSize": "[parameters('exceptionsWindowSize')]",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": "[parameters('exceptionsThresholdAlert')]",
                            "name": "Metric1",
                            "metricNamespace": "microsoft.insights/components",
                            "metricName": "exceptions/server",
                            "dimensions": [
                                {
                                    "name": "cloud/roleName",
                                    "operator": "Include",
                                    "values": "[parameters('backendAppSecondaryList')]"
                                }
                            ],
                            "operator": "GreaterThan",
                            "timeAggregation": "Count",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.Insights/components",
                "targetResourceRegion": "[parameters('secondaryRegion')]",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups',parameters('actionGroupName'))]",
                        "webHookProperties": {}
                    }
                ]
            }
        },
        {                                                      // Alert for idle tasks
            "type": "microsoft.insights/scheduledqueryrules",
            "apiVersion": "2018-04-16",
            "name": "[variables('scheduledqueryrulesTaskIdleTooLongName')]",
            "location": "[parameters('primaryRegion')]",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups',parameters('actionGroupName'))]"
            ],
            "properties": {
                "description": "Backend Java application task has issues",
                "enabled": "true",
                "source": {
                    "query": "traces\n| where message matches regex \"Background task \\\\[.*\\\\] issue.*\"\n| project taskname=extract(\"Background task \\\\[(.*)\\\\] issue.*\", 1, message),timestamp\n| summarize AggregatedValue = count() by bin(timestamp, 5m),taskname\n",
                    "authorizedResources": [],
                    "dataSourceId": "[resourceId('microsoft.insights/components', parameters('appInsightName'))]",
                    "queryType": "ResultCount"
                },
                "schedule": {
                    "frequencyInMinutes": 10,
                    "timeWindowInMinutes": 30
                },
                "action": {
                    "severity": "3",
                    "aznsAction": {
                        "actionGroup": [
                            "[resourceId('microsoft.insights/actionGroups',parameters('actionGroupName'))]"
                        ]
                    },
                    "trigger": {
                        "thresholdOperator": "GreaterThanOrEqual",
                        "threshold": 1,
                        "metricTrigger": {
                            "thresholdOperator": "GreaterThan",
                            "threshold": 1,
                            "metricTriggerType": "Consecutive",
                            "metricColumn": "taskname"
                        }
                    },
                    "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction"
                }
            }
        },
        {                                                      // Alert for idle tasks SECONDARY REGION
            "type": "microsoft.insights/scheduledqueryrules",
            "apiVersion": "2018-04-16",
            "name": "[variables('scheduledqueryrulesTaskIdleTooLongSecondaryName')]",
            "location": "[parameters('secondaryRegion')]",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups',parameters('actionGroupName'))]"
            ],
            "properties": {
                "description": "Backend Java application task has issues",
                "enabled": "true",
                "source": {
                    "query": "traces\n| where message matches regex \"Background task \\\\[.*\\\\] issue.*\"\n| project taskname=extract(\"Background task \\\\[(.*)\\\\] issue.*\", 1, message),timestamp\n| summarize AggregatedValue = count() by bin(timestamp, 5m),taskname\n",
                    "authorizedResources": [],
                    "dataSourceId": "[resourceId('microsoft.insights/components', parameters('appInsightSecondaryName'))]",
                    "queryType": "ResultCount"
                },
                "schedule": {
                    "frequencyInMinutes": 10,
                    "timeWindowInMinutes": 30
                },
                "action": {
                    "severity": "3",
                    "aznsAction": {
                        "actionGroup": [
                            "[resourceId('microsoft.insights/actionGroups',parameters('actionGroupName'))]"
                        ]
                    },
                    "trigger": {
                        "thresholdOperator": "GreaterThanOrEqual",
                        "threshold": 1,
                        "metricTrigger": {
                            "thresholdOperator": "GreaterThan",
                            "threshold": 1,
                            "metricTriggerType": "Consecutive",
                            "metricColumn": "taskname"
                        }
                    },
                    "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction"
                }
            }
        },
        {                                                      // Alert for absent incoming events on dfp-hub
            "type": "microsoft.insights/metricAlerts",
            "apiVersion": "2018-03-01",
            "name": "[variables('metricalertNoIncomingEventsDfphubName')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups',parameters('actionGroupName'))]"
            ],
            "properties": {
                "description": "No incoming messages in dfp-hub for long period of time",
                "severity": 3,
                "enabled": true,
                "scopes": [
                    "[resourceId('Microsoft.EventHub/namespaces', parameters('ehubName'))]"
                ],
                "evaluationFrequency": "[parameters('NoIncomingEventsDfphubEvaluationFrequency')]",
                "windowSize": "[parameters('NoIncomingEventsDfphubWindowSize')]",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": "[parameters('NoIncomingEventsDfphubThreshold')]",
                            "name": "Metric1",
                            "metricNamespace": "Microsoft.EventHub/namespaces",
                            "metricName": "IncomingMessages",
                            "dimensions": [
                                {
                                    "name": "EntityName",
                                    "operator": "Include",
                                    "values": [
                                        "dfp-hub"
                                    ]
                                }
                            ],
                            "operator": "LessThanOrEqual",
                            "timeAggregation": "Total",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.EventHub/namespaces",
                "targetResourceRegion": "[parameters('primaryRegion')]",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups',parameters('actionGroupName'))]",
                        "webHookProperties": {}
                    }
                ]
            }
        },
        {                                                      // Alert for absent incoming events on dfp-hub SECONDARY REGION
            "type": "microsoft.insights/metricAlerts",
            "apiVersion": "2018-03-01",
            "name": "[variables('metricalertNoIncomingEventsDfphubSecondaryName')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups',parameters('actionGroupName'))]"
            ],
            "properties": {
                "description": "No incoming messages in dfp-hub for long period of time",
                "severity": 3,
                "enabled": true,
                "scopes": [
                    "[resourceId('Microsoft.EventHub/namespaces', parameters('ehubSecondaryName'))]"
                ],
                "evaluationFrequency": "[parameters('NoIncomingEventsDfphubEvaluationFrequency')]",
                "windowSize": "[parameters('NoIncomingEventsDfphubWindowSize')]",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": "[parameters('NoIncomingEventsDfphubThreshold')]",
                            "name": "Metric1",
                            "metricNamespace": "Microsoft.EventHub/namespaces",
                            "metricName": "IncomingMessages",
                            "dimensions": [
                                {
                                    "name": "EntityName",
                                    "operator": "Include",
                                    "values": [
                                        "dfp-hub"
                                    ]
                                }
                            ],
                            "operator": "LessThanOrEqual",
                            "timeAggregation": "Total",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.EventHub/namespaces",
                "targetResourceRegion": "[parameters('secondaryRegion')]",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups',parameters('actionGroupName'))]",
                        "webHookProperties": {}
                    }
                ]
            }
        },
        {                                                          // Alert for traces WARN level
            "type": "microsoft.insights/metricalerts",
            "apiVersion": "2018-03-01",
            "name": "[variables('metricalertTraceWarnSeverityName')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups',parameters('actionGroupName'))]"
            ],
            "properties": {
                "description": "Number of traces with WARN severity is high",
                "severity": 4,
                "enabled": true,
                "scopes": [
                    "[resourceId('microsoft.insights/components', parameters('appInsightName'))]"
                ],
                "evaluationFrequency": "[parameters('metricalertTraceWarnSeverityEvaluationFrequency')]",
                "windowSize": "[parameters('metricalertTraceWarnSeverityWindowSize')]",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": "[parameters('metricalertTraceWarnSeverityThreshold')]",
                            "name": "Metric1",
                            "metricNamespace": "microsoft.insights/components",
                            "metricName": "traces/count",
                            "dimensions": [
                                {
                                    "name": "trace/severityLevel",
                                    "operator": "Include",
                                    "values": [
                                        "2"
                                    ]
                                }
                            ],
                            "operator": "GreaterThan",
                            "timeAggregation": "Count",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.Insights/components",
                "targetResourceRegion": "[parameters('primaryRegion')]",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups',parameters('actionGroupName'))]",
                        "webHookProperties": {}
                    }
                ]
            }
        },
        {                                                          // Alert for traces WARN level SECONDARY REGION
            "type": "microsoft.insights/metricalerts",
            "apiVersion": "2018-03-01",
            "name": "[variables('metricalertTraceWarnSeveritySecondaryName')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups',parameters('actionGroupName'))]"
            ],
            "properties": {
                "description": "Number of traces with WARN severity is high",
                "severity": 4,
                "enabled": true,
                "scopes": [
                    "[resourceId('microsoft.insights/components', parameters('appInsightSecondaryName'))]"
                ],
                "evaluationFrequency": "[parameters('metricalertTraceWarnSeverityEvaluationFrequency')]",
                "windowSize": "[parameters('metricalertTraceWarnSeverityWindowSize')]",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": "[parameters('metricalertTraceWarnSeverityThreshold')]",
                            "name": "Metric1",
                            "metricNamespace": "microsoft.insights/components",
                            "metricName": "traces/count",
                            "dimensions": [
                                {
                                    "name": "trace/severityLevel",
                                    "operator": "Include",
                                    "values": [
                                        "2"
                                    ]
                                }
                            ],
                            "operator": "GreaterThan",
                            "timeAggregation": "Count",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.Insights/components",
                "targetResourceRegion": "[parameters('secondaryRegion')]",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups',parameters('actionGroupName'))]",
                        "webHookProperties": {}
                    }
                ]
            }
        },
        {                                                          // Alert for traces ERROR level
            "type": "microsoft.insights/metricalerts",
            "apiVersion": "2018-03-01",
            "name": "[variables('metricalertTraceErrorSeverityName')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups',parameters('actionGroupName'))]"
            ],
            "properties": {
                "description": "Number of traces with ERROR severity is high",
                "severity": 3,
                "enabled": true,
                "scopes": [
                    "[resourceId('microsoft.insights/components', parameters('appInsightName'))]"
                ],
                "evaluationFrequency": "[parameters('metricalertTraceErrorSeverityEvaluationFrequency')]",
                "windowSize": "[parameters('metricalertTraceErrorSeverityWindowSize')]",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": "[parameters('metricalertTraceErrorSeverityThreshold')]",
                            "name": "Metric1",
                            "metricNamespace": "microsoft.insights/components",
                            "metricName": "traces/count",
                            "dimensions": [
                                {
                                    "name": "trace/severityLevel",
                                    "operator": "Include",
                                    "values": [
                                        "3"
                                    ]
                                }
                            ],
                            "operator": "GreaterThan",
                            "timeAggregation": "Count",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.Insights/components",
                "targetResourceRegion": "[parameters('primaryRegion')]",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups',parameters('actionGroupName'))]",
                        "webHookProperties": {}
                    }
                ]
            }
        },
        {                                                          // Alert for traces ERROR level SECONDARY REGION
            "type": "microsoft.insights/metricalerts",
            "apiVersion": "2018-03-01",
            "name": "[variables('metricalertTraceErrorSeveritySecondaryName')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups',parameters('actionGroupName'))]"
            ],
            "properties": {
                "description": "Number of traces with ERROR severity is high",
                "severity": 3,
                "enabled": true,
                "scopes": [
                    "[resourceId('microsoft.insights/components', parameters('appInsightSecondaryName'))]"
                ],
                "evaluationFrequency": "[parameters('metricalertTraceErrorSeverityEvaluationFrequency')]",
                "windowSize": "[parameters('metricalertTraceErrorSeverityWindowSize')]",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": "[parameters('metricalertTraceErrorSeverityThreshold')]",
                            "name": "Metric1",
                            "metricNamespace": "microsoft.insights/components",
                            "metricName": "traces/count",
                            "dimensions": [
                                {
                                    "name": "trace/severityLevel",
                                    "operator": "Include",
                                    "values": [
                                        "3"
                                    ]
                                }
                            ],
                            "operator": "GreaterThan",
                            "timeAggregation": "Count",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.Insights/components",
                "targetResourceRegion": "[parameters('secondaryRegion')]",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups',parameters('actionGroupName'))]",
                        "webHookProperties": {}
                    }
                ]
            }
        },
        {                                                     // Alert Fatal Error
            "type": "microsoft.insights/scheduledqueryrules",
            "apiVersion": "2018-04-16",
            "name": "[variables('scheduledqueryrulesFatalErrorName')]",
            "location": "[parameters('primaryRegion')]",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups',parameters('actionGroupName'))]"
            ],
            "properties": {
                "description": "Fatal error in backend application log",
                "enabled": "true",
                "source": {
                    "query": "traces\n| where message contains \"fatal error\"",
                    "authorizedResources": [],
                    "dataSourceId": "[resourceId('microsoft.insights/components', parameters('appInsightName'))]",
                    "queryType": "ResultCount"
                },
                "schedule": {
                    "frequencyInMinutes": 10,
                    "timeWindowInMinutes": 30
                },
                "action": {
                    "severity": "3",
                    "aznsAction": {
                        "actionGroup": [
                            "[resourceId('microsoft.insights/actionGroups',parameters('actionGroupName'))]"
                        ]
                    },
                    "trigger": {
                        "thresholdOperator": "GreaterThan",
                        "threshold": 0
                    },
                    "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction"
                }
            }
        },
        {                                                     // Alert Fatal Error SECONDARY
            "type": "microsoft.insights/scheduledqueryrules",
            "apiVersion": "2018-04-16",
            "name": "[variables('scheduledqueryrulesFatalErrorSecondaryName')]",
            "location": "[parameters('secondaryRegion')]",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups',parameters('actionGroupName'))]"
            ],
            "properties": {
                "description": "Fatal error in backend application log",
                "enabled": "true",
                "source": {
                    "query": "traces\n| where message contains \"fatal error\"",
                    "authorizedResources": [],
                    "dataSourceId": "[resourceId('microsoft.insights/components', parameters('appInsightSecondaryName'))]",
                    "queryType": "ResultCount"
                },
                "schedule": {
                    "frequencyInMinutes": 10,
                    "timeWindowInMinutes": 30
                },
                "action": {
                    "severity": "3",
                    "aznsAction": {
                        "actionGroup": [
                            "[resourceId('microsoft.insights/actionGroups',parameters('actionGroupName'))]"
                        ]
                    },
                    "trigger": {
                        "thresholdOperator": "GreaterThan",
                        "threshold": 0
                    },
                    "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction"
                }
            }
        }
    ]
}
